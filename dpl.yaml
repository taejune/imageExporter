apiVersion: apps/v1
kind: Deployment
metadata:
  name: docker-archive
  labels:
    app: docker-archive
spec:
  replicas: 1
  selector:
    matchLabels:
      app: docker-archive
  template:
    metadata:
      labels:
        app: docker-archive
    spec:
      containers:
      - name: registry
        image: registry:2.7.1
        ports:
        - containerPort: 5000
        volumeMounts:
        - mountPath: /var/lib/registry
          name: docker-registry-storage
      - name: archiver
        image: tmaxcloudck/gsheet-sync:dev
        ports:
          - containerPort: 8080
      - name: exporter
        image: tmaxcloudck/regarchiver:dev
        env:
          - name: TAR_PATH
            value: /data
          - name: UPLOAD_SCP_PATH
            value: <enter_ftp_path>
          - name: UPLOAD_SCP_PASS
            value: <enter_ftp_pass>
        ports:
          - containerPort: 3000
        volumeMounts:
          - mountPath: /data
            name: docker-registry-storage
      volumes:
      - name: docker-registry-storage
        persistentVolumeClaim:
          claimName: docker-registry-pvc
      - name: nginx-conf
        configMap:
          name: nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: docker-archive
spec:
  type: NodePort
  selector:
    app: docker-archive
  ports:
    - name: docker
      protocol: TCP
      port: 5000
      targetPort: 5000
      nodePort: 30500
    - name: http
      protocol: TCP
      port: 8080
      nodePort: 30800
      targetPort: 8080
    - name: exporter
      protocol: TCP
      port: 3000
      targetPort: 3000
      nodePort: 30300
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: docker-registry-pvc
spec:
  storageClassName: hostpath
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
